name: Devel - Build HPC Development Images

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master
    paths:
      - "**/Dockerfile"
      - "scripts/**"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-matrix:
    name: Build
    strategy:
      fail-fast: false
      max-parallel: 24
      matrix:
        compiler: [gcc, oneapi, nvhpc, aocc]
        os: [almalinux9, almalinux10, noble, leap]
        mpi: [openmpi]

        include:
          # # gpu architecture-dependent build arg specifications
          # - gpu: cuda
          #   gpu_build_args: |
          #     CUDA_VERSION=12.9
          #     CUDA_INSTALLER_URL=https://developer.download.nvidia.com/compute/cuda/12.9.1/local_installers/cuda_12.9.1_575.57.08_linux.run

          # compiler build arg specifications
          - compiler: gcc
            compiler_build_args: |
              COMPILER_FAMILY=os-gcc
          - compiler: oneapi
            compiler_build_args: |
              COMPILER_FAMILY=oneapi
              ONEAPI_VERSION=2025.2.0
              ONEAPI_CC_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/39c79383-66bf-4f44-a6dd-14366e34e255/intel-dpcpp-cpp-compiler-2025.2.0.527_offline.sh
              ONEAPI_FC_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/2c69ab6a-dfff-4d8f-ae1c-8368c79a1709/intel-fortran-compiler-2025.2.0.534_offline.sh

          - compiler: aocc
            compiler_build_args: |
              COMPILER_FAMILY=aocc

          - compiler: nvhpc
            compiler_build_args: |
              COMPILER_FAMILY=nvhpc
              MARCH_FLAGS=-march=x86-64-v3
              NVHPC_VERSION=25.7
              NVHPC_URL=https://developer.download.nvidia.com/hpc-sdk/25.7/nvhpc_2025_257_Linux_x86_64_cuda_12.9.tar.gz

          # - compiler: clang
          #   compiler_build_args: |
          #     COMPILER_FAMILY=clang
          #     LLVM_VERSION=21.1.0
          #     LLVM_URL=https://github.com/llvm/llvm-project/releases/download/llvmorg-21.1.0/LLVM-21.1.0-Linux-X64.tar.xz

          # mpi build arg specifications
          - mpi: openmpi
            mpi_build_args: |
              MPI_FAMILY=openmpi
              OPENMPI_VERSION=5.0.8

          # - mpi: mpich
          #   mpi_build_args: |
          #     MPI_FAMILY=mpich
          #     MPICH_VERSION=4.3.1

    # (use a cloud builder for clang -- too resource intensive for free GHA runners)
    #      buildx_cloud: ${{ matrix.compiler == "clang" }}
    uses: ./.github/workflows/build-hpc-development-image.yaml
    with:
      docker_repo: "benjaminkirk/gh-ci"
      os: ${{ matrix.os }}
      arch: "x86_64"
      runner: "ubuntu-latest"
      free_runner_space: ${{ matrix.compiler == 'nvhpc' }}
      conda: true
      gpu: "nogpu"
      gpu_build_args: ${{ matrix.gpu_build_args }}
      compiler: ${{ matrix.compiler }}
      compiler_build_args: ${{ matrix.compiler_build_args }}
      mpi: ${{ matrix.mpi }}
      mpi_build_args: ${{ matrix.mpi_build_args }}
      test: true
      publish: true
      extra_build_args: |
        HDF5_VERSION=1.12.3
        HDF5_URL=https://github.com/HDFGroup/hdf5/releases/download/hdf5-1_12_3/hdf5-1_12_3.tar.gz
        NETCDF_C_VERSION=4.9.3
        NETCDF_FORTRAN_VERSION=4.6.2
        PNETCDF_VERSION=1.14.0
        PIO_VERSION=2.6.6
        PIO_TAG=pio2_6_6
        FFTW_VERSION=3.3.10
        HEFFTE_VERSION=2.4.1

    secrets:
      dockerhub_token: ${{ secrets.BENKIRK_DOCKERHUB_TOKEN }}
