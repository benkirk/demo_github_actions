name: Container Build

on:
  workflow_dispatch:
    inputs:
      hello_world:
        description: 'Build Simple MPI Hello World'
        type: boolean
        default: true

      dart:
        description: 'Build Simple Dart Example'
        type: boolean
        default: true
      dart_version:
        description: 'DART Release Version'
        required: true
        type: string
        default: 'v11.8.8'

      kokkos:
        description: 'Build Simple Kokkos Example'
        type: boolean
        default: false
      kokkos_version:
        description: 'Kokkos Release Version'
        required: true
        type: string
        default: '4.5.01'

  push:
    branches:
      - ci_cd

jobs:
  build-from-container-env:
    strategy:
      fail-fast: true
      matrix:
        compiler: [nvhpc, oneapi, aocc, gcc12, gcc13]
        mpi:      [mpich, openmpi]

        include:
          - mpi: openmpi
            extra_mpiexec_args: '--allow-run-as-root'

    name: Build Inside Container
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elo pipefail {0}

    container:
      image:  benjaminkirk/cisldev-almalinux9-${{ matrix.compiler }}-${{ matrix.mpi }}:latest

    steps:
      - name: Interrogate Environment
        run: |
          env | sort
          cat /container/config_env.sh
          df -h
          cat /etc/os-release 2>/dev/null || true
          uname -a
          nvidia-smi 2>/dev/null || true
          echo && echo && echo
          echo '----------------------------------------------------------------'
          echo && echo && echo
          echo "CC=${CC}"
          echo "CXX=${CXX}"
          echo "FC=${FC}"
          echo "F77=${F77}"
          echo
          echo "CFLAGS=${CFLAGS}"
          echo "CPPFLAGS=${CPPFLAGS}"
          echo "CXXFLAGS=${CXXFLAGS}"
          echo "FCFLAGS=${FCFLAGS}"
          echo "F77FLAGS=${F77FLAGS}"
          export CC CXX FC F77 CFLAGS CXXFLAGS FCFLAGS F77FLAGS CPPFLAGS
          mpicc --version 2>/dev/null || true

      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: List Source Tree
        run: |
          pwd
          find * ! -type d

      - name: Hello World
        if: ${{ inputs.hello_world }}
        run: |
          mpicxx -o ./hello_world_mpi src/hello_world_mpi.C -fopenmp
          ldd ./hello_world_mpi
          export OMP_NUM_THREADS=2
          mpiexec -n 2 ${{ matrix.extra_mpiexec_args }} ./hello_world_mpi || true

      - name: DART
        if: ${{ inputs.dart }}
        run: |
          export DART_VERSION="${{ inputs.dart_version }}"
          ./scripts/build_dart.sh

      - name: Kokkos
        if: ${{ inputs.kokkos }}
        run: |
          export KOKKOS_VERSION="${{ inputs.kokkos_version }}"
          ./scripts/build_kokkos.sh
