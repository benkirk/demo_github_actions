name: Build HPC Development Images

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Base OS'
        type: choice
        required: true
        default: almalinux9
        options:
          - almalinux8
          - almalinux9
          - leap
          - tumbleweed
          - noble

      conda:
        description: 'Include Conda (Miniforge)'
        type: boolean
        required: false
        default: true

      # gpu:
      #   description: 'GPU / Accelerator framework'
      #   type: choice
      #   required: true
      #   default: nogpu
      #   options:
      #     - nogpu
      #     - cuda
      #     - rocm

      test:
        description: 'Test Image'
        type: boolean
        required: false
        default: true

      publish:
        description: 'Publish Image'
        type: boolean
        required: false
        default: true

jobs:

  build-matrix:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        arch:     [ x86_64, aarch64 ]
        compiler: [ oneapi, aocc, os-gcc, gcc12, gcc13, gcc14 ]
        mpi:      [ openmpi, mpich, mpich3 ]

        include:
          # compiler build arg specifications
          - compiler: oneapi
            compiler_build_args: |
              COMPILER_FAMILY=oneapi
              ONEAPI_VERSION=2025.1.0
              ONEAPI_CC_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/cd63be99-88b0-4981-bea1-2034fe17f5cf/intel-dpcpp-cpp-compiler-2025.1.0.573_offline.sh
              ONEAPI_FC_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/577ebc28-d0f6-492b-9a43-b04354ce99da/intel-fortran-compiler-2025.1.0.601_offline.sh

          - compiler: aocc
            compiler_build_args: |
              COMPILER_FAMILY=aocc

          - compiler: os-gcc
            compiler_build_args: |
              COMPILER_FAMILY=os-gcc

          - compiler: gcc12
            compiler_build_args: |
              COMPILER_FAMILY=gcc
              GCC_VERSION=12.4.0

          - compiler: gcc13
            compiler_build_args: |
              COMPILER_FAMILY=gcc
              GCC_VERSION=13.3.0

          - compiler: gcc14
            compiler_build_args: |
              COMPILER_FAMILY=gcc
              GCC_VERSION=14.2.0

          # - compiler: gcc15
          #   compiler_build_args: |
          #     COMPILER_FAMILY=gcc
          #     GCC_VERSION=15.1.0

          # - compiler: clang
          #   compiler_build_args: |
          #     COMPILER_FAMILY=clang
          #     LLVM_VERSION=20.1.4

          # mpi build arg specifications
          - mpi: openmpi
            mpi_build_args: |
              MPI_FAMILY=openmpi
              OPENMPI_VERSION=5.0.7

          - mpi: openmpi
            compiler: aocc
            mpi_build_args: |
              MPI_FAMILY=openmpi
              OPENMPI_VERSION=4.1.8

          - mpi: mpich
            mpi_build_args: |
              MPI_FAMILY=mpich
              MPICH_VERSION=4.3.0

          # - mpi: mpich3
          #   mpi_build_args: |
          #     MPI_FAMILY=mpich3
          #     MPICH_VERSION=3.4.3

        exclude:
          - mpi: mpich3
            compiler: aocc
          - arch: aarch64
            compiler: oneapi
          - arch: aarch64
            compiler: aocc

    uses: ./.github/workflows/build-hpc-development-image.yaml
    with:
      os: ${{ inputs.os }}
      arch: ${{ matrix.arch }}
      runner: ${{ matrix.arch == 'x86_64' && 'ubuntu-latest' || 'ubuntu-24.04-arm' }}
      conda: ${{ inputs.conda }}
      compiler: ${{ matrix.compiler }}
      compiler_build_args: ${{ matrix.compiler_build_args }}
      mpi: ${{ matrix.mpi }}
      mpi_build_args: ${{ matrix.mpi_build_args }}
      test: ${{ inputs.test }}
      publish: ${{ inputs.publish }}

    secrets:
      dockerhub_token: ${{ secrets.BENKIRK_DOCKERHUB_TOKEN }}
