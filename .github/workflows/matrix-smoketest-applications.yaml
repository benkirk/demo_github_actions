name: Build NCAR Applications Inside HPC Development Containers

on:
  workflow_dispatch:
    inputs:
      os:
        description: 'Base OS'
        type: choice
        required: true
        default: almalinux9
        options:
          - almalinux8
          - almalinux9
          - almalinux10
          - leap
          - tumbleweed
          - noble

      docker_repo:
        description: "Docker Repository"
        type: choice
        required: true
        default: "ncarcisl/hpcdev"
        options:
          - "benjaminkirk/gh-ci"
          - "benjaminkirk/hpcdev"
          - "ncarcisl/gh-ci"
          - "ncarcisl/hpcdev"

jobs:

  run-matrix:
    strategy:
      fail-fast: false
      matrix:
        compiler: [ nvhpc, oneapi, aocc, gcc, gcc12, gcc14 ]
        mpi:      [ openmpi, mpich ]
        gpu:      [ nogpu, cuda ]
        arch:     [ x86_64 ]

        exclude:
          - arch: arm64
            compiler: oneapi
          - arch: arm64
            compiler: aocc

    name: Build Apps
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -elo pipefail {0}

    container:
      image: ${{ inputs.docker_repo }}-${{ matrix.arch }}:${{ inputs.os }}-${{ matrix.compiler }}-${{ matrix.mpi }}${{ matrix.gpu == 'cuda' && '-cuda' || '' }}-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Interrogate Runtime Environment
        run: |
          cat /container/config_env.sh
          df -h
          free -g
          cat /etc/os-release 2>/dev/null || true
          uname -a
          lscpu
          nvidia-smi 2>/dev/null || true
          echo && echo && echo
          echo '----------------------------------------------------------------'
          echo && echo && echo
          echo "CC=${CC}"
          echo "CXX=${CXX}"
          echo "FC=${FC}"
          echo "F77=${F77}"
          echo
          echo "CFLAGS=${CFLAGS}"
          echo "CPPFLAGS=${CPPFLAGS}"
          echo "CXXFLAGS=${CXXFLAGS}"
          echo "FCFLAGS=${FCFLAGS}"
          echo "F77FLAGS=${F77FLAGS}"
          export CC CXX FC F77 CFLAGS CXXFLAGS FCFLAGS F77FLAGS CPPFLAGS
          conda --version 2>/dev/null || echo " --> no conda in this container"
          which mpicc
          mpicc --version 2>/dev/null || true

      - name: MPI+OpenMP Hello World
        run: |
          mpicxx -o ./hello_world_mpi ./scripts/hello_world_mpi.cxx -fopenmp
          ldd ./hello_world_mpi
          export OMP_NUM_THREADS=2
          export OMPI_MCA_opal_cuda_support=false
          export MPIR_CVAR_ENABLE_GPU=0
          mpiexec -n 2 ./hello_world_mpi

      - name: DART
        continue-on-error: true
        run: |
          export DART_VERSION="v11.10.9"
          timeout 25m ./scripts/build_dart.sh

      - name: WRF
        continue-on-error: true
        run: |
          export WRF_VERSION="4.7.0"
          export EXTRA_CMAKE_ARGS="-DCMAKE_BUILD_TYPE=DEBUG"
          export MAKE_J_PROCS=2
          timeout 25m ./scripts/build_wrf.sh

      - name: MPAS
        continue-on-error: true
        run: |
          export MPAS_VERSION="8.2.2"
          export DEBUG=true
          timeout 25m ./scripts/build_mpas.sh

      - name: ESMF
        continue-on-error: true
        run: |
          export ESMF_VERSION="8.8.1"
          timeout 25m ./scripts/build_esmf.sh

      - name: Kokkos
        continue-on-error: true
        run: |
          timeout 25m ./scripts/build_kokkos.sh
